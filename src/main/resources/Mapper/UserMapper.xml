<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhangwenlong.librarycms.mapper.UserMapper">
    <resultMap id="resUserBook" type="com.zhangwenlong.librarycms.entity.User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="sex" property="sex"/>
        <result column="birthday" property="birthday"/>
        <collection select="getBorrowBook" property="borrowBook" ofType="com.zhangwenlong.librarycms.entity.BorrowBook" column="id" >
        </collection>
    </resultMap>
    <resultMap id="resBorrowBook" type="java.util.HashMap">
        <id column="id" property="id"/>
        <result column="user_id" property="user_id"/>
        <result column="book_id" property="book_id"/>
        <result column="start_time" property="start_time"/>
        <result column="end_time" property="end_time"/>
        <association select="getBook" property="book" javaType="com.zhangwenlong.librarycms.entity.Book" column="book_id">

        </association>
    </resultMap>

<!--    根据BorrowBook表中的book_id查询book的详细信息-->
    <select id="getBook" resultType="com.zhangwenlong.librarycms.entity.Book">
        select * from book where id = #{book_id}
    </select>
<!--    根据用户ID查询book-->
    <select id="getBorrowBook" resultMap="resBorrowBook" >
        select * from borrow_book where user_id=#{id}
    </select>
<!--    登录，根据用户名和密码判断数据库是否存在-->
    <select id="login" resultType="com.zhangwenlong.librarycms.entity.User">
        select * from user where name=#{name} and password=#{password}
    </select>
<!--    查询所有用户数据-->
    <select id="selectUserAll" resultType="com.zhangwenlong.librarycms.entity.User">
        select * from user
    </select>
<!--    根据ID查询用户数据-->
    <select id="selectUserById" resultMap="resUserBook">
        select * from user where id = #{id}
    </select>
<!--    添加新用户，id是数据库自增，不需要传值-->
    <insert id="insertUser" >
        insert into user(name,password,sex,birthday) values (#{name},#{password},#{sex},#{birthday})
    </insert>
<!--    User实体类有哪些数据就修改哪些-->
    <update id="updateUser" parameterType="com.zhangwenlong.librarycms.entity.User">
        update user
        <set>
            <if test="name!=null"> name = #{name}, </if>
            <if test="password!=null">password=#{password},</if>
            <if test="sex!=null">sex = #{sex},</if>
            <if test="birthday!=null">birthday = #{birthday}</if>
        </set>
        where id = #{id}
    </update>
<!--根据用户ID删除-->
    <delete id="deleteUserById" parameterType="int">
        delete from user where id=#{id}
    </delete>
</mapper>